{% extends "layout.twig" %}

{% block title %}Gestion des Dépenses{% endblock %}

{% block content %}
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Dépenses</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/Dashboard">Tableau de bord</a></li>
                    <li class="breadcrumb-item active">Dépenses</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <!-- Filters -->
        <div class="card card-warning">
            <div class="card-header">
                <h3 class="card-title">Filtres</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <form method="get" action="/Expenses/list">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Bien immobilier</label>
                                <select class="form-control" name="property_id">
                                    <option value="">Tous les biens</option>
                                    {% for property in properties %}
                                        <option value="{{ property.id }}" {% if filter.property_id == property.id %}selected{% endif %}>
                                            {{ property.name }}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Année</label>
                                <select class="form-control" name="year">
                                    {% for y in range(("now"|date("Y"))-5, ("now"|date("Y"))) %}
                                        <option value="{{ y }}" {% if filter.year == y %}selected{% endif %}>{{ y }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Mois</label>
                                <select class="form-control" name="month">
                                    <option value="">Tous les mois</option>
                                    <option value="1" {% if filter.month == '1' %}selected{% endif %}>Janvier</option>
                                    <option value="2" {% if filter.month == '2' %}selected{% endif %}>Février</option>
                                    <option value="3" {% if filter.month == '3' %}selected{% endif %}>Mars</option>
                                    <option value="4" {% if filter.month == '4' %}selected{% endif %}>Avril</option>
                                    <option value="5" {% if filter.month == '5' %}selected{% endif %}>Mai</option>
                                    <option value="6" {% if filter.month == '6' %}selected{% endif %}>Juin</option>
                                    <option value="7" {% if filter.month == '7' %}selected{% endif %}>Juillet</option>
                                    <option value="8" {% if filter.month == '8' %}selected{% endif %}>Août</option>
                                    <option value="9" {% if filter.month == '9' %}selected{% endif %}>Septembre</option>
                                    <option value="10" {% if filter.month == '10' %}selected{% endif %}>Octobre</option>
                                    <option value="11" {% if filter.month == '11' %}selected{% endif %}>Novembre</option>
                                    <option value="12" {% if filter.month == '12' %}selected{% endif %}>Décembre</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Catégorie</label>
                                <select class="form-control" name="category">
                                    <option value="">Toutes les catégories</option>
                                    {% for code, label in categories %}
                                        <option value="{{ code }}" {% if filter.category == code %}selected{% endif %}>
                                            {{ label }}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label>Déductible</label>
                                <select class="form-control" name="deductible">
                                    <option value="">Tous</option>
                                    <option value="1" {% if filter.deductible == '1' %}selected{% endif %}>Oui</option>
                                    <option value="0" {% if filter.deductible == '0' %}selected{% endif %}>Non</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i> Filtrer
                            </button>
                            <a href="/Expenses/list" class="btn btn-default">
                                <i class="fas fa-redo"></i> Réinitialiser
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- Expense list card -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Liste des dépenses</h3>
                <div class="card-tools">
                    <a href="/Expenses/add" class="btn btn-warning btn-sm">
                        <i class="fas fa-plus"></i> Ajouter une dépense
                    </a>
                </div>
            </div>
            <div class="card-body">
                {% if expenses|length > 0 %}
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Bien</th>
                                    <th>Catégorie</th>
                                    <th>Description</th>
                                    <th>Montant</th>
                                    <th>Déductible</th>
                                    <th>Justificatif</th>
                                    <th style="width: 15%">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for expense in expenses %}
                                    <tr>
                                        <td>{{ expense.expense_date|date('d/m/Y') }}</td>
                                        <td>{{ expense.property_name }}</td>
                                        <td>
                                            {% if categories[expense.category] is defined %}
                                                {{ categories[expense.category] }}
                                            {% else %}
                                                {{ expense.category }}
                                            {% endif %}
                                        </td>
                                        <td>{{ expense.description }}</td>
                                        <td class="text-right">{{ expense.amount|number_format(2, ',', ' ') }} €</td>
                                        <td class="text-center">
                                            {% if expense.is_deductible %}
                                                <span class="badge badge-success">Oui</span>
                                            {% else %}
                                                <span class="badge badge-danger">Non</span>
                                            {% endif %}
                                        </td>
                                        <td class="text-center">
                                            {% if expense.receipt_path %}
                                                <a href="/Expenses/viewReceipt/{{ expense.id }}" target="_blank" class="btn btn-xs btn-info">
                                                    <i class="fas fa-file-alt"></i>
                                                </a>
                                            {% else %}
                                                <span class="badge badge-secondary">Non</span>
                                            {% endif %}
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <a href="/Expenses/edit/{{ expense.id }}" class="btn btn-sm btn-info">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a href="/Expenses/delete/{{ expense.id }}" class="btn btn-sm btn-danger">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="4" class="text-right">Total:</th>
                                    <th class="text-right">{{ total|number_format(2, ',', ' ') }} €</th>
                                    <th colspan="3"></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                {% else %}
                    <div class="alert alert-info">
                        <h5><i class="icon fas fa-info"></i> Aucune dépense</h5>
                        Aucune dépense ne correspond à vos critères de recherche.
                        <a href="/Expenses/add" class="btn btn-warning btn-sm ml-2">
                            <i class="fas fa-plus"></i> Ajouter une dépense
                        </a>
                    </div>
                {% endif %}
            </div>
        </div>
        
        <!-- Visualizations -->
        <div class="row">
            <div class="col-md-6">
                <!-- Monthly Summary -->
                {% if monthlySummary|length > 0 %}
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Dépenses mensuelles ({{ filter.year }})</h3>
                    </div>
                    <div class="card-body">
                        <div class="chart">
                            <canvas id="expenseChart" height="250"></canvas>
                        </div>
                    </div>
                </div>
                {% endif %}
            </div>
            
            <div class="col-md-6">
                <!-- Category Breakdown -->
                {% if categoryBreakdown|length > 0 %}
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Répartition par catégorie ({{ filter.year }})</h3>
                    </div>
                    <div class="card-body">
                        <div class="chart">
                            <canvas id="categoryChart" height="250"></canvas>
                        </div>
                    </div>
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</section>
{% endblock %}

{% block scripts %}
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
<script>
    {% if monthlySummary|length > 0 %}
    // Monthly expense chart
    const expenseCtx = document.getElementById('expenseChart').getContext('2d');
    
    // Prepare data
    const months = [
        'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',
        'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'
    ];
    
    const monthlyData = [
        {% for summary in monthlySummary %}
            {
                month: {{ summary.month }},
                total: {{ summary.total }}
            },
        {% endfor %}
    ];
    
    // Initialize all months with 0
    const chartData = Array(12).fill(0);
    
    // Fill with actual data
    monthlyData.forEach(item => {
        chartData[item.month - 1] = item.total;
    });
    
    const expenseChart = new Chart(expenseCtx, {
        type: 'bar',
        data: {
            labels: months,
            datasets: [{
                label: 'Dépenses mensuelles (€)',
                data: chartData,
                backgroundColor: 'rgba(255, 193, 7, 0.2)',
                borderColor: 'rgba(255, 193, 7, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            if (context.parsed.y !== null) {
                                label += new Intl.NumberFormat('fr-FR', { 
                                    style: 'currency', 
                                    currency: 'EUR' 
                                }).format(context.parsed.y);
                            }
                            return label;
                        }
                    }
                }
            }
        }
    });
    {% endif %}
    
    {% if categoryBreakdown|length > 0 %}
    // Category breakdown chart
    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    
    const categoryData = [
        {% for category in categoryBreakdown %}
            {
                category: '{{ categories[category.category] ?? category.category }}',
                total: {{ category.total }}
            },
        {% endfor %}
    ];
    
    const categoryLabels = categoryData.map(item => item.category);
    const categoryTotals = categoryData.map(item => item.total);
    
    // Define colors
    const backgroundColors = [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)',
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)'
    ];
    
    const borderColors = [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)',
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)'
    ];
    
    const categoryChart = new Chart(categoryCtx, {
        type: 'doughnut',
        data: {
            labels: categoryLabels,
            datasets: [{
                label: 'Dépenses par catégorie',
                data: categoryTotals,
                backgroundColor: backgroundColors.slice(0, categoryLabels.length),
                borderColor: borderColors.slice(0, categoryLabels.length),
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'right',
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let label = context.label || '';
                            let value = context.raw;
                            let sum = context.dataset.data.reduce((a, b) => a + b, 0);
                            let percentage = Math.round(value / sum * 100);
                            return `${label}: ${new Intl.NumberFormat('fr-FR', {style: 'currency', currency: 'EUR'}).format(value)} (${percentage}%)`;
                        }
                    }
                }
            }
        }
    });
    {% endif %}
</script>
{% endblock %}
